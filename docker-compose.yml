services:
  backend:
    container_name: backend-service
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000" # Expose backend port
    environment:
      NODE_ENV: development
      DB_NAME: media_db
      DB_USER: postgres
      DB_PASS: password
      DB_HOST: db # Database service name
      DB_PORT: 5432
    depends_on:
      - db # Wait for the database to start before the backend
    volumes:
      - ./backend:/app # Sync local backend code with the container
      - /app/node_modules # Avoid issues with host vs container node_modules
    command: sh -c "npm install && npm start"

  frontend:
    container_name: frontend-service
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Expose frontend on port 3000
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:4000 # URL for backend API
    depends_on:
      - backend
    volumes:
      - ./frontend:/app # Sync local frontend code with the container
      - /app/node_modules # Avoid issues with host vs container node_modules
    command: sh -c "npm install && npm run dev"

  db:
    container_name: database-service
    image: postgres:15-alpine
    ports:
      - "5432:5432" # Expose PostgreSQL on port 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: media_db
    volumes:
      - db_data:/var/lib/postgresql/data # Persist database data

volumes:
  db_data: # Persistent storage for database data
